facing problem
1. terkena constraints di ADMIN, solusinya adalah dengan menambah constraints
    ALTER TABLE m_role DROP CONSTRAINT m_role_name_check;

    ALTER TABLE m_role ADD CONSTRAINT m_role_name_check
    CHECK (name IN ('MERCHANT', 'CUSTOMER', 'ADMIN'));
2. Terkena constraint misal merchant dihapus, produk tidak ikut terhapus
   Solusinya adalah, menambahkan ini:
    @OneToMany(mappedBy = "merchant", cascade = CascadeType.ALL, orphanRemoval = true)
       private List<Product> products = new ArrayList<>();
   di entity merchant, ternyata tetap harus menambahkan relasi products
3. Membuat validasi error di console muncul di postman sebagai response
   Solusinya adalah dengan membuat GlobalExceptionHandler
   @RestControllerAdvice
   public class GlobalExceptionHandler {

       @ExceptionHandler(OurException.class)
       public ResponseEntity<CommonResponse<String>> handleOurException(OurException ex) {
           CommonResponse<String> response = CommonResponse.<String>builder()
                   .statusCode(HttpStatus.BAD_REQUEST.value())  // Atau gunakan HttpStatus.UNPROCESSABLE_ENTITY (422)
                   .message(ex.getMessage())
                   .build();
           return new ResponseEntity<>(response, HttpStatus.BAD_REQUEST);
       }

       @ExceptionHandler(Exception.class)
       public ResponseEntity<CommonResponse<String>> handleGeneralException(Exception ex) {
           CommonResponse<String> response = CommonResponse.<String>builder()
                   .statusCode(HttpStatus.INTERNAL_SERVER_ERROR.value())
                   .message("Internal Server Error: " + ex.getMessage())
                   .build();
           return new ResponseEntity<>(response, HttpStatus.INTERNAL_SERVER_ERROR);
       }
   }
